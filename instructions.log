☼ setup user in linux server
☼ add the public ssh key
☼ enable the firewall
☼ install nginx
☼ install certbot
☼ install node
☼ install pm2 // to run the app as a process


// to deploy

/>heroku login // logs in to heroku


to undo modified files --> />git reset --hard HEAD




-- digital ocean


login as root

-- create user

>adduser username

-- to remove a user
switch to root
>sudo su root
-delete the user
>userdel username

-- add user to the sudo group

> usermod -aG sudo username

-- login as the user

>sudo su - username

-- SSH --

-- create the ssh directory to the home folder

>mkdir ~/.ssh

-- create the key

>chmod 700 ~/.ssh/authorized_keys
>nano ~/.ssh/authorized_keys

copy the bublic key in one line and save (ctrl-x to exit)
>chmod 600 ~/.ssh/authorized_keys

sudo service ssh restart

-- login is ready


-- GIT & SSH --

to add remote
>git add live ssh://username@domain.com/var/repo/site.git
to remove remote
>git remove live ssh://username@domain.com/var/repo/site.git

to list remotes
>git remote -v


►to start the ssh agent
>eval $(ssh-agent -s)

►to add ssh key to agent
>ssh-add ~/.ssh/id_rsa

to verify configuration
>ssh -T username@ip


 -- setup the remote server --

• add a group
> sudo addgroup groupname

• add user to group
>sudo adduser username groupname

• create the folder
> sudo mkdir export/git && cd export/git && mkdir example.git

• change the group ownership to be the desired group -- if project exists has to e done recursively -R
>sudo chgrp groupname foldername

• change the permissions (g+rws) s -> sticky flag (apply to subfolders)
>sudo chmod g+rws

• cd to the repository folder and create the remote
>git init --bare --shared






-- remove acess to root user

>sudo nano /etc/ssh/sshd_config
-- change PermitRootAcess to no & PasswordAuth no
>sudo systemctl reload sshd

download winscp

install pm2 to run the application as a process

run the app with pm2

>pm2 start index.js

-- for the domainname go to enomcentral

ns1.digitalocean.com
ns2.digitalocean.com
ns3.digitalocean.com


-- to gitital ocean
-- networking tab
--add a domain

put the name to the input

go to A

hostname @
ipadress

-- to show server ip address
>ip addr show


-- to run on port 80

sudo apt-get install libcap2-bin

to change the port

sudo setcap cap_net_bind_service=+ep `readlink -f \`which node\``


-- FIREWALL UFW --

to show list > sudo ufw app list
to enable the firewall > sudo ufw enable


• to list with nubers >sudo ufw status numbered

• to allow from ip to certain port>sudo ufw allow from <ip> to any port <port>

-- NGINX --

allow only http traffic -- sudo ufw allow 'Nginx HTTP'

 to show the allowed apps  >sudo ufw status

► to stop the server >sudo systemctl stop nginx
► to start nginx >sudo systemctl start nginx

► to disable nginx from starting on startup
>sudo systemctl disable nginx
► to enable
>sudo systemctl enable nginx

-- secure nginx with letsencrypt --

► install certbot
>sudo add-apt-repository ppa:certbot/certbot
>sudo apt-get install certbot

► to check nginx for sytnax errors
>sudo nginx -t
► to restart the server
>sudo systemctl restart nginx

§ have to read about ssl

► install build-essential // nesseseray for some packages
>apt-get install build-essential


-- ENVIROMENT VARIABLES --

►set enviroment variables with export
>export NODE_ENV="production"

• show environment variables
>printenv

• to set env vars system wide
>cd etc/environenment
>sudo nano environment
write the variable


-- MYSQL --

•sudo apt-get update
•sudo apt-get install mysql-server

security script
>mysql_secure_installation

-- access from firewall

check!
>iptables -A INPUT -i rth0 -p tcp -m tcp --dport=3306 -j ACCEPT
>iptables-save


• to change default password policies

◘ to check the policies
mysql> SHOW VARIABLES LIKE 'validate_password%';

◘ to change
mysql> SET GLOBAL <rule>



check the configuration
>netstat -tunelp

• to test if the server is running
systemctl status mysql.service

• to start the server

sudo systemctl start mysql.


○ to acess the sql shell

mysql -u root -p


-- connection with ssh tunnel

• putty
ssh -> tunnels ->

source port - 3306
destination -> 127.0.0.1:3306

go to etc/mysql/mysqld/mysqld.conf.cnf

edit my.conf -->
> bind adress = server-ip-adress (instead of localhost)

--restart the service to make the changes to take effect

>service mysql restart


create user
mysql>create user '<name>'@'%' identified by '<pass>';
mysql>grant all on *.* to '<name>'@'%';


-- QUERIES --


 -- insert --
insert into posts ('name', ....) values ('john', ...);

• update

UPDATE customers
SET email = 'test@gmail'
WHERE id = 3;

• delete

DELETE FROM customers WHERE id = 3;

• alter

ALTER TABLE customers
ADD testcolumn varvhar(255);

ALTER TABLE customers
MODIFY COLUMN testcol int(11);


• select

SELECT * FROM customers;

SELECT name FROM customers WHERE id = 3;

SELECT name FROM customers ORDER BY  name ASC; (DESC)


--- indexes --

CREATE INDEX Cindex
ON customers(city);

drop index  cindex
ON customers(city);


-- RELATIONS --

create table orders (
id int not null auto_increment,
ordernumber int,
productId int,
customerId int,
orderDate DATETIME default CURRENT_TIMESTAMP,
primary key(id),
FOREIGN KEY(customerId) REFERENCES customers(id),
FOREIGN KEY(prdductId) REFERENCES products(id)
);



-- inner joins --

select customers.firstName, customers.lastName, orders.ordernumber
FROM customers
INNER JOIN orders
ON customers.id = orders.customerId
ORDER BY customers.lastName;



-- RESTFUL API --

constrains
○ client server architecture
○ stateless
○ cacheability
○ layered system
○ uniform interface
○ code on demand



 -- SQL --

 ► to check the design of the table > DESCRIBE <table>;


 --sublime terminal cmder

 {
    "terminal": "C:\\cmder\\Cmder.exe",
    "parameters": ["/START", "%CWD%"]
}

